#include "tickbase-exploits.h"
#include "../../helpers/math.hpp"


bool Tickbase::CanExploit(int tickbase_shift) {
	auto weapon = g_LocalPlayer->m_hActiveWeapon();

	if (!weapon) return false;

	const auto info = (weapon->GetCSWeaponData());

	if (!(info)) return false;

	float curtime = TICKS_TO_TIME(g_LocalPlayer->m_nTickBase() - tickbase_shift);

	if (curtime < g_LocalPlayer->m_flNextAttack())
		return false;

	if (curtime < weapon->m_flNextPrimaryAttack())
		return false;

	return true;
}

bool Tickbase::CanDoubleTap () {
	if (!g_Options.exploit_doubletap) return false;

	C_BaseCombatWeapon* m_pWeapon = g_LocalPlayer->m_hActiveWeapon().Get();
	if (!m_pWeapon || !m_pWeapon->CanShiftTickbase()) return false;

	if (m_pWeapon->m_Item().m_iItemDefinitionIndex() == 40 || m_pWeapon->m_Item().m_iItemDefinitionIndex() == 9) return false;

	return true;
}
void Tickbase::PreverseCharge(CUserCmd * cmd)
{
	if (Snakeware::SkipTicks > 0 && !Snakeware::DoubleTapCharged) {
		Snakeware::SkipTicks--;
		if (Snakeware::SkipTicks == 0) {
			Snakeware::DoubleTapCharged = true;
		}
		cmd->tick_count = INT_MAX;
		Snakeware::bSendPacket = true;
	}
}
void Tickbase::DoubleTap (CUserCmd * cmd) {
	
	if (!g_EngineClient->IsConnected() || !g_EngineClient->IsInGame()) return;
	if (!g_LocalPlayer || !g_LocalPlayer->IsAlive())                   return;
	static bool did_shift_before = false;
	static int double_tapped = 0;
	static int PrevShiftTick = 0;
	static bool reset = false;
	static int shot_tick = 0;
	static int process_ticks = 0;
	
	static bool DidShot = false;
	if (CanDoubleTap()) {
		if (g_Options.exploit_doubletap && GetKeyState(g_Options.exploit_doubletap_key))
		{
			PrevShiftTick = 0;

			auto can_shift_shot = CanExploit(16);
			auto can_shot = CanExploit(abs(-1 - PrevShiftTick));

			if (can_shift_shot || !can_shot && !did_shift_before)
			{
				PrevShiftTick = 16;
				double_tapped = 0;
			}
			else {
				double_tapped++;
				PrevShiftTick = 0;
			}

			{
				if (PrevShiftTick > 0)
				{
					if (CanExploit(PrevShiftTick))
					{

						if (cmd->buttons & IN_ATTACK) {
							Snakeware::m_nTickbaseShift = PrevShiftTick;
							DidShot = true;
							reset = false;
							Snakeware::CmdTick = cmd->command_number;
							Snakeware::BaseTick = g_LocalPlayer->m_nTickBase();


						}
						else
						{
							if ((!(cmd->buttons & IN_ATTACK) || !Snakeware::OnShot) && DidShot) {
								Snakeware::DoubleTapCharged = false;
								Snakeware::SkipTicks = 16;
								DidShot = false;
							}
						}
					}
					else
					{
						process_ticks = 0;
					}
				}
				did_shift_before = PrevShiftTick != 0;
			}
		}
	}
	else {
		if (Snakeware::OnShot && cmd->buttons & IN_ATTACK)
		Snakeware::m_nTickbaseShift = g_Options.exploit_hideshots ? 9 : 0;
	}

	
}